{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww20860\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs42 \cf0 Part 1
\f1\b0\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
1.\
	 - select * from items order by price asc\
\
	- select * from items where price > 80 order by price asc\
\
	- select first_name, last_name from customers order by first_name asc limit 3\
\
	- select last_name from customers order by last_name desc\
\
2. \
	CREATE TABLE purchases(\
	id SERIAL,\
	customer_id integer,\
	item_id integer,\
	PRIMARY KEY (id),\
	FOREIGN KEY(customer_id) REFERENCES customers (customer_id),\
	FOREIGN KEY(item_id) REFERENCES items (item_id));\
\
	insert into purchases (customer_id) values ((select customer_id from customers where customer_id = 	2));\
\
	it works as item id can be left blank \
\
	insert into purchases (customer_id, item_id) values\
	((select customer_id from customers where customer_id = 1),(select item_id from items where item_id = 5)),\
	((select customer_id from customers where customer_id = 2),(select item_id from items where item_id = 4)),\
	((select customer_id from customers where customer_id = 3),(select item_id from items where item_id = 3)),\
	((select customer_id from customers where customer_id = 4),(select item_id from items where item_id = 2)),\
	((select customer_id from customers where customer_id = 5),(select item_id from items where item_id = 1));\
\
3. \
	select customers.first_name, customers.last_name ,purchases.item_id from customers\
	inner join purchases\
	on customers.customer_id = purchases.customer_id\
\
	select customers.first_name, customers.last_name ,purchases.item_id from customers \
	inner join purchases\
	on customers.customer_id = purchases.customer_id\
	where customers.customer_id = 4\
\
 	select customers.first_name, customers.last_name ,purchases.item_id from customers \
	inner join purchases\
	on customers.customer_id = purchases.customer_id\
	where purchases.item_id = 2 and purchases.item_id = 3\
\
4. \
	insert into purchases(customer_id, item_id )\
	values ((select customer_id from customers where first_name = 'Scott' and last_name = 'Scott'),\
	((select item_id from items where item = 'Hard Drive')))\
\
5. \
	select first_name, last_name, item from customers \
	inner join purchases \
	on purchases.customer_id = customers.customer_id\
	inner join items \
	on purchases.item_id = items.item_id\
\
\

\f0\b\fs44 Part 2 - Dvd Rental\

\fs26 \

\f1\b0 1. select collunms from customer\
\
2. select concat(first_name, ' ',last_name) as full_name from customer\
\
3. select distinct create_date from customer\
\
4. select * from customer order by first_name asc\
\
5.  select film_id, title, description, release_year, rental_rate from film order by rental_rate \
\
6.  select address, phone from address where district = 'Texas'\
\
7. select * from film where film_id = '15' or film_id = '150'\
\
8. select film_id, title, description, length from film where title = 'Star Wars'\
\
9. select film_id, title, description, rental_rate length from film where title like 'St%'\
\
10, select film_id, title, description, rental_rate from film order by rental_rate limit 10\
\
11. \
\
12. select payment.customer_id, amount, payment_date from payment\
inner join customer\
on payment.customer_id = customer.customer_id\
order by payment.customer_id asc\
\
13. select payment.customer_id, amount, payment_date from payment\
join customer\
on payment.customer_id = customer.customer_id\
order by payment.customer_id asc\
\
14. select city, country from city \
join country \
on country.country_id = city.country_id\
\
15. select customer_id, first_name, last_name, amount, staff.staff_id ,payment_date from staff\
join payment\
on staff.staff_id = payment.staff_id\
}